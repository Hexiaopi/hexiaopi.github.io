const e=JSON.parse('{"key":"v-3c53178c","path":"/data-structure/tree/binary-tree.html","title":"二叉树","lang":"zh-CN","frontmatter":{"description":"二叉树 满足以下两个条件的树就是二叉树： 本身是有序树 树中包含的各个节点的度不能超过2，即只能是：0、1、2 定义二叉树的结构 type Node struct { \\tLeft *Node \\tData interface{} \\tRight *Node }","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/data-structure/tree/binary-tree.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"二叉树"}],["meta",{"property":"og:description","content":"二叉树 满足以下两个条件的树就是二叉树： 本身是有序树 树中包含的各个节点的度不能超过2，即只能是：0、1、2 定义二叉树的结构 type Node struct { \\tLeft *Node \\tData interface{} \\tRight *Node }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-30T09:20:01.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:modified_time","content":"2023-07-30T09:20:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-30T09:20:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"先序遍历","slug":"先序遍历","link":"#先序遍历","children":[{"level":3,"title":"递归实现","slug":"递归实现","link":"#递归实现","children":[]},{"level":3,"title":"示例测试","slug":"示例测试","link":"#示例测试","children":[]}]},{"level":2,"title":"中序遍历","slug":"中序遍历","link":"#中序遍历","children":[{"level":3,"title":"递归实现","slug":"递归实现-1","link":"#递归实现-1","children":[]},{"level":3,"title":"示例测试","slug":"示例测试-1","link":"#示例测试-1","children":[]}]},{"level":2,"title":"后续遍历","slug":"后续遍历","link":"#后续遍历","children":[{"level":3,"title":"递归实现","slug":"递归实现-2","link":"#递归实现-2","children":[]},{"level":3,"title":"示例测试","slug":"示例测试-2","link":"#示例测试-2","children":[]}]},{"level":2,"title":"层次遍历","slug":"层次遍历","link":"#层次遍历","children":[{"level":3,"title":"队列实现","slug":"队列实现","link":"#队列实现","children":[]},{"level":3,"title":"示例测试","slug":"示例测试-3","link":"#示例测试-3","children":[]}]}],"git":{"createdTime":1690708801000,"updatedTime":1690708801000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":4.35,"words":1306},"filePathRelative":"data-structure/tree/binary-tree.md","localizedDate":"2023年7月30日","excerpt":"<h1> 二叉树</h1>\\n<blockquote>\\n<p>满足以下两个条件的树就是二叉树：</p>\\n<ul>\\n<li>本身是有序树</li>\\n<li>树中包含的各个节点的度不能超过2，即只能是：0、1、2</li>\\n</ul>\\n</blockquote>\\n<p>定义二叉树的结构</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">type</span> Node <span class=\\"token keyword\\">struct</span> <span class=\\"token punctuation\\">{</span>\\n\\tLeft  <span class=\\"token operator\\">*</span>Node\\n\\tData  <span class=\\"token keyword\\">interface</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\tRight <span class=\\"token operator\\">*</span>Node\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
