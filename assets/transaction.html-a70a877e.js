const e=JSON.parse('{"key":"v-13f32783","path":"/database/mysql/transaction.html","title":"MySQL-事务","lang":"zh-CN","frontmatter":{"title":"MySQL-事务","icon":"mysql","date":"2022-10-23T00:00:00.000Z","tag":["MySQL","数据库"],"category":["数据库"],"description":"事务的特性 原子性(Atomicity): 事务中的所有操作要么全部完成，要么全部不完成（回滚），不会在事务中间遇到错误而中断。 一致性(Consistency): 事务开始和结束时，数据都必须保持一致状态，即符合约束、完整性、默认值以及其它定义的规则。事务执行的结果不能破坏数据库的完整性和一致性。 隔离性(Isolation): 各个事务互相隔离，每个事务的执行都不会影响其它事务的执行或者结果。 持久性(Durability): 一个事务一旦提交成功，它对数据库中的数据的改变就是永久性的，即使发生数据库故障也不应该对其产生影响。","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/database/mysql/transaction.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"MySQL-事务"}],["meta",{"property":"og:description","content":"事务的特性 原子性(Atomicity): 事务中的所有操作要么全部完成，要么全部不完成（回滚），不会在事务中间遇到错误而中断。 一致性(Consistency): 事务开始和结束时，数据都必须保持一致状态，即符合约束、完整性、默认值以及其它定义的规则。事务执行的结果不能破坏数据库的完整性和一致性。 隔离性(Isolation): 各个事务互相隔离，每个事务的执行都不会影响其它事务的执行或者结果。 持久性(Durability): 一个事务一旦提交成功，它对数据库中的数据的改变就是永久性的，即使发生数据库故障也不应该对其产生影响。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Hexiaopi.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-30T09:20:01.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"MySQL-事务"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:published_time","content":"2022-10-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-30T09:20:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL-事务\\",\\"image\\":[\\"https://Hexiaopi.github.io/\\"],\\"datePublished\\":\\"2022-10-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-30T09:20:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"事务的特性","slug":"事务的特性","link":"#事务的特性","children":[]},{"level":2,"title":"事务的实现","slug":"事务的实现","link":"#事务的实现","children":[]},{"level":2,"title":"并发事务带来的问题","slug":"并发事务带来的问题","link":"#并发事务带来的问题","children":[{"level":3,"title":"脏读问题","slug":"脏读问题","link":"#脏读问题","children":[]},{"level":3,"title":"不可重复读问题","slug":"不可重复读问题","link":"#不可重复读问题","children":[]},{"level":3,"title":"幻读问题","slug":"幻读问题","link":"#幻读问题","children":[]}]},{"level":2,"title":"事务的隔离级别","slug":"事务的隔离级别","link":"#事务的隔离级别","children":[{"level":3,"title":"未提交读(read uncommitted，RU)","slug":"未提交读-read-uncommitted-ru","link":"#未提交读-read-uncommitted-ru","children":[]},{"level":3,"title":"提交读(read committed，RC)","slug":"提交读-read-committed-rc","link":"#提交读-read-committed-rc","children":[]},{"level":3,"title":"可重复读(repeatable read，RR)","slug":"可重复读-repeatable-read-rr","link":"#可重复读-repeatable-read-rr","children":[]},{"level":3,"title":"串行化(serializable，S)","slug":"串行化-serializable-s","link":"#串行化-serializable-s","children":[]}]},{"level":2,"title":"MVCC","slug":"mvcc","link":"#mvcc","children":[{"level":3,"title":"MVCC下SQL语句实际处理","slug":"mvcc下sql语句实际处理","link":"#mvcc下sql语句实际处理","children":[]},{"level":3,"title":"快照读","slug":"快照读","link":"#快照读","children":[]},{"level":3,"title":"当前读","slug":"当前读","link":"#当前读","children":[]}]},{"level":2,"title":"那么MySQL可重复读解决幻读了吗？","slug":"那么mysql可重复读解决幻读了吗","link":"#那么mysql可重复读解决幻读了吗","children":[]}],"git":{"createdTime":1690708801000,"updatedTime":1690708801000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":9.82,"words":2946},"filePathRelative":"database/mysql/transaction.md","localizedDate":"2022年10月23日","excerpt":"<h2> 事务的特性</h2>\\n<ul>\\n<li>原子性(Atomicity): 事务中的所有操作要么全部完成，要么全部不完成（回滚），不会在事务中间遇到错误而中断。</li>\\n<li>一致性(Consistency): 事务开始和结束时，数据都必须保持一致状态，即符合约束、完整性、默认值以及其它定义的规则。事务执行的结果不能破坏数据库的完整性和一致性。</li>\\n<li>隔离性(Isolation): 各个事务互相隔离，每个事务的执行都不会影响其它事务的执行或者结果。</li>\\n<li>持久性(Durability): 一个事务一旦提交成功，它对数据库中的数据的改变就是永久性的，即使发生数据库故障也不应该对其产生影响。</li>\\n</ul>","autoDesc":true}');export{e as data};
