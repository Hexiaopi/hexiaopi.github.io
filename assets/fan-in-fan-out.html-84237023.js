const n=JSON.parse('{"key":"v-0bf2c3e2","path":"/design-pattern/concurrency/fan-in-fan-out.html","title":"扇入/扇出模型","lang":"zh-CN","frontmatter":{"title":"扇入/扇出模型","date":"2023-08-22T00:00:00.000Z","tag":["Go","并发模式"],"category":["设计模式"],"description":"扇出模式 即多个相同goroutine从同一个channel读取数据并处理 fan-out func TestFanOut(t *testing.T) { \\tvar nums = []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10} \\tin := echo(nums) \\tc1 := odd(in) \\tc2 := odd(in) \\tc3 := odd(in) \\tt.Log(\\"c1\\") \\tfor n := range c1 { \\t\\tt.Log(n) \\t} \\tt.Log(\\"c2\\") \\tfor n := range c2 { \\t\\tt.Log(n) \\t} \\tt.Log(\\"c3\\") \\tfor n := range c3 { \\t\\tt.Log(n) \\t} }","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/design-pattern/concurrency/fan-in-fan-out.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"扇入/扇出模型"}],["meta",{"property":"og:description","content":"扇出模式 即多个相同goroutine从同一个channel读取数据并处理 fan-out func TestFanOut(t *testing.T) { \\tvar nums = []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10} \\tin := echo(nums) \\tc1 := odd(in) \\tc2 := odd(in) \\tc3 := odd(in) \\tt.Log(\\"c1\\") \\tfor n := range c1 { \\t\\tt.Log(n) \\t} \\tt.Log(\\"c2\\") \\tfor n := range c2 { \\t\\tt.Log(n) \\t} \\tt.Log(\\"c3\\") \\tfor n := range c3 { \\t\\tt.Log(n) \\t} }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-22T14:05:24.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"并发模式"}],["meta",{"property":"article:published_time","content":"2023-08-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-22T14:05:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"扇入/扇出模型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-22T14:05:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"扇出模式","slug":"扇出模式","link":"#扇出模式","children":[]},{"level":2,"title":"扇入模式","slug":"扇入模式","link":"#扇入模式","children":[]}],"git":{"createdTime":1692713124000,"updatedTime":1692713124000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":1.5,"words":449},"filePathRelative":"design-pattern/concurrency/fan-in-fan-out.md","localizedDate":"2023年8月22日","excerpt":"<h2> 扇出模式</h2>\\n<p>即多个相同goroutine从同一个channel读取数据并处理</p>\\n<figure><figcaption>fan-out</figcaption></figure>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">func</span> <span class=\\"token function\\">TestFanOut</span><span class=\\"token punctuation\\">(</span>t <span class=\\"token operator\\">*</span>testing<span class=\\"token punctuation\\">.</span>T<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">var</span> nums <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">6</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">7</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">8</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">}</span>\\n\\tin <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">echo</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">)</span>\\n\\tc1 <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">odd</span><span class=\\"token punctuation\\">(</span>in<span class=\\"token punctuation\\">)</span>\\n\\tc2 <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">odd</span><span class=\\"token punctuation\\">(</span>in<span class=\\"token punctuation\\">)</span>\\n\\tc3 <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">odd</span><span class=\\"token punctuation\\">(</span>in<span class=\\"token punctuation\\">)</span>\\n\\tt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"c1\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">for</span> n <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> c1 <span class=\\"token punctuation\\">{</span>\\n\\t\\tt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Log</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\tt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"c2\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">for</span> n <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> c2 <span class=\\"token punctuation\\">{</span>\\n\\t\\tt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Log</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n\\tt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"c3\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">for</span> n <span class=\\"token operator\\">:=</span> <span class=\\"token keyword\\">range</span> c3 <span class=\\"token punctuation\\">{</span>\\n\\t\\tt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Log</span><span class=\\"token punctuation\\">(</span>n<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
