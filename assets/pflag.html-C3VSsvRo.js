import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as l,c,a as n,b as a,d as t,w as i,e as u}from"./app-5nld10jx.js";const r={},d=n("ul",null,[n("li",null,"flag的子命令需要自己解析"),n("li",null,"flag的短命令需要定义两个变量"),n("li",null,"不支持一些参数废弃说明，这在更新的工具中对用户有更好的引导作用")],-1),k={href:"https://github.com/spf13/pflag",target:"_blank",rel:"noopener noreferrer"},g=u(`<h2 id="简单用法" tabindex="-1"><a class="header-anchor" href="#简单用法"><span>简单用法</span></a></h2><h3 id="支持标准库flag用法" tabindex="-1"><a class="header-anchor" href="#支持标准库flag用法"><span>支持标准库flag用法</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">var</span> flagStrA <span class="token operator">=</span> pflag<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;str-a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;str-a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flag test *string&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用示例：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">ExampleFlagLongStringPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;--str-a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;stra&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>flagStrA<span class="token punctuation">)</span>
	<span class="token comment">// Output:</span>
	<span class="token comment">// stra</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意是长选项，即参数为<code>--xxx</code></p></div><h3 id="支持短选项" tabindex="-1"><a class="header-anchor" href="#支持短选项"><span>支持短选项</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">var</span> flagStrB <span class="token operator">=</span> pflag<span class="token punctuation">.</span><span class="token function">StringP</span><span class="token punctuation">(</span><span class="token string">&quot;str-b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;str-b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;long and short flag test *string&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用示例：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">ExampleFlagShortStringPoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;-b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;strb&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">*</span>flagStrB<span class="token punctuation">)</span>
	<span class="token comment">// OutPut:</span>
	<span class="token comment">// strb</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="支持绑定到已有变量" tabindex="-1"><a class="header-anchor" href="#支持绑定到已有变量"><span>支持绑定到已有变量</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">var</span> flagStrC <span class="token builtin">string</span>
<span class="token keyword">var</span> flagStrD <span class="token builtin">string</span>

<span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pflag<span class="token punctuation">.</span><span class="token function">StringVar</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>flagStrC<span class="token punctuation">,</span> <span class="token string">&quot;str-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;str-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;long flag test string&quot;</span><span class="token punctuation">)</span>
	pflag<span class="token punctuation">.</span><span class="token function">StringVarP</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>flagStrD<span class="token punctuation">,</span> <span class="token string">&quot;str-d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;str-d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;long and short flag test string&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用示例：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">ExampleFlagString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;--str-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;strc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;strd&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>flagStrC<span class="token punctuation">,</span> flagStrD<span class="token punctuation">)</span>
	<span class="token comment">// Output:</span>
	<span class="token comment">// strc strd</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="标记命令行参数已废弃" tabindex="-1"><a class="header-anchor" href="#标记命令行参数已废弃"><span>标记命令行参数已废弃</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">.</span><span class="token function">MarkDeprecated</span><span class="token punctuation">(</span><span class="token string">&quot;badflag&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;please use --desc instead&quot;</span><span class="token punctuation">)</span>
pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">.</span><span class="token function">MarkShorthandDeprecated</span><span class="token punctuation">(</span><span class="token string">&quot;str-b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;please use --str-b instead&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>打印Usage()</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>Flag --badflag has been deprecated, please use --desc instead
Flag shorthand -b has been deprecated, please use --str-b instead
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="指定了参数却没有传值场景下的默认值改写" tabindex="-1"><a class="header-anchor" href="#指定了参数却没有传值场景下的默认值改写"><span>指定了参数却没有传值场景下的默认值改写</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">var</span> age <span class="token operator">=</span> pflag<span class="token punctuation">.</span><span class="token function">IntP</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">&quot;Input Your Age&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pflag<span class="token punctuation">.</span><span class="token function">Lookup</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>NoOptDefVal <span class="token operator">=</span> <span class="token string">&quot;25&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用示例：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">TestFlagDefault</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	tests <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
		name      <span class="token builtin">string</span>
		arguments <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
		want      <span class="token builtin">int</span>
	<span class="token punctuation">}</span><span class="token punctuation">{</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;没传入参数和值&quot;</span><span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> want<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;传入参数和值&quot;</span><span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;--age=10&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> want<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">&quot;传入参数,没传值&quot;</span><span class="token punctuation">,</span> arguments<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;--age&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> want<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> test <span class="token operator">:=</span> <span class="token keyword">range</span> tests <span class="token punctuation">{</span>
		pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span>arguments<span class="token punctuation">)</span>
		<span class="token keyword">if</span> <span class="token operator">*</span>age <span class="token operator">!=</span> test<span class="token punctuation">.</span>want <span class="token punctuation">{</span>
			t<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;%s pflag parse want:%d,but got:%d&quot;</span><span class="token punctuation">,</span> test<span class="token punctuation">.</span>name<span class="token punctuation">,</span> test<span class="token punctuation">.</span>want<span class="token punctuation">,</span> <span class="token operator">*</span>age<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>::: notice</p><ul><li>当输入--age 10，age变量值为：10；</li><li>当输入--age，age变量值为：25；</li><li>当没输入--age，age变量值为：30；</li></ul><p>:::</p><h3 id="支持隐藏参数" tabindex="-1"><a class="header-anchor" href="#支持隐藏参数"><span>支持隐藏参数</span></a></h3><blockquote><p>隐藏的参数不会显示在usage/help中</p></blockquote><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code>pflag<span class="token punctuation">.</span>CommandLine<span class="token punctuation">.</span><span class="token function">MarkHidden</span><span class="token punctuation">(</span><span class="token string">&quot;secretFlag&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,28);function m(v,f){const e=s("RouteLink"),p=s("ExternalLinkIcon");return l(),c("div",null,[n("p",null,[a("我在标准库中介绍了"),t(e,{to:"/go-language/standard-library/flag.html"},{default:i(()=>[a("flag使用")]),_:1}),a("，对于小型的项目flag能够基本满足需求，但是在某些大型项目或者特殊场景下flag有些力不从心。主要在于：")]),d,n("p",null,[a("因此业界开源的"),n("a",k,[a("pflag"),t(p)]),a("受到广大爱好者的使用，在一些耳熟能详的开源项目里也都在使用pflag，例如：Kubernetes、Istio、Helm、Docker、Etcd等。")]),g])}const q=o(r,[["render",m],["__file","pflag.html.vue"]]),x=JSON.parse('{"path":"/go-language/third-party/pflag.html","title":"pflag","lang":"zh-CN","frontmatter":{"title":"pflag","date":"2023-09-20T00:00:00.000Z","tag":["Go","三方库"],"category":["Go语言"],"description":"我在标准库中介绍了，对于小型的项目flag能够基本满足需求，但是在某些大型项目或者特殊场景下flag有些力不从心。主要在于： flag的子命令需要自己解析 flag的短命令需要定义两个变量 不支持一些参数废弃说明，这在更新的工具中对用户有更好的引导作用 因此业界开源的pflag受到广大爱好者的使用，在一些耳熟能详的开源项目里也都在使用pflag，例如：...","head":[["meta",{"property":"og:url","content":"http://blog.cjhe.top/go-language/third-party/pflag.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"pflag"}],["meta",{"property":"og:description","content":"我在标准库中介绍了，对于小型的项目flag能够基本满足需求，但是在某些大型项目或者特殊场景下flag有些力不从心。主要在于： flag的子命令需要自己解析 flag的短命令需要定义两个变量 不支持一些参数废弃说明，这在更新的工具中对用户有更好的引导作用 因此业界开源的pflag受到广大爱好者的使用，在一些耳熟能详的开源项目里也都在使用pflag，例如：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-20T15:35:18.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"三方库"}],["meta",{"property":"article:published_time","content":"2023-09-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-20T15:35:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pflag\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-20T15:35:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"简单用法","slug":"简单用法","link":"#简单用法","children":[{"level":3,"title":"支持标准库flag用法","slug":"支持标准库flag用法","link":"#支持标准库flag用法","children":[]},{"level":3,"title":"支持短选项","slug":"支持短选项","link":"#支持短选项","children":[]},{"level":3,"title":"支持绑定到已有变量","slug":"支持绑定到已有变量","link":"#支持绑定到已有变量","children":[]},{"level":3,"title":"标记命令行参数已废弃","slug":"标记命令行参数已废弃","link":"#标记命令行参数已废弃","children":[]},{"level":3,"title":"指定了参数却没有传值场景下的默认值改写","slug":"指定了参数却没有传值场景下的默认值改写","link":"#指定了参数却没有传值场景下的默认值改写","children":[]},{"level":3,"title":"支持隐藏参数","slug":"支持隐藏参数","link":"#支持隐藏参数","children":[]}]}],"git":{"createdTime":1695222538000,"updatedTime":1695224118000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":2}]},"readingTime":{"minutes":1.8,"words":541},"filePathRelative":"go-language/third-party/pflag.md","localizedDate":"2023年9月20日","excerpt":"<p>我在标准库中介绍了<a href=\\"/go-language/standard-library/flag.html\\" target=\\"_blank\\">flag使用</a>，对于小型的项目flag能够基本满足需求，但是在某些大型项目或者特殊场景下flag有些力不从心。主要在于：</p>\\n<ul>\\n<li>flag的子命令需要自己解析</li>\\n<li>flag的短命令需要定义两个变量</li>\\n<li>不支持一些参数废弃说明，这在更新的工具中对用户有更好的引导作用</li>\\n</ul>\\n<p>因此业界开源的<a href=\\"https://github.com/spf13/pflag\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pflag</a>受到广大爱好者的使用，在一些耳熟能详的开源项目里也都在使用pflag，例如：Kubernetes、Istio、Helm、Docker、Etcd等。</p>","autoDesc":true}');export{q as comp,x as data};
