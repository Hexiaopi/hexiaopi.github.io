const e=JSON.parse('{"key":"v-5ec5b1ef","path":"/go-language/base/data-type.html","title":"数据类型","lang":"zh-CN","frontmatter":{"title":"数据类型","date":"2022-05-03T00:00:00.000Z","tag":["Go","基础"],"category":["Go语言"],"description":"数据类型 Go语言基本数据类型（Data-types）划分方式有很多，这里按照数据类型进行划分：值类型、复合类型、引用类型 左耳朵耗子说：类型的本质是对内存的一种抽象，不同的类型会有不同的内存布局和内存分配的策略。不同的类型有不同的操作。 值类型 值类型即基本的数据类型，包括布尔类型（bool）、整型（int）、浮点型（float）、字节型（byte）、复数型（complex）、字符串型（string）和错误类型（error）。 值类型的变量在传递过程中，编译器对该变量的值进行一次拷贝。","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/go-language/base/data-type.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"数据类型"}],["meta",{"property":"og:description","content":"数据类型 Go语言基本数据类型（Data-types）划分方式有很多，这里按照数据类型进行划分：值类型、复合类型、引用类型 左耳朵耗子说：类型的本质是对内存的一种抽象，不同的类型会有不同的内存布局和内存分配的策略。不同的类型有不同的操作。 值类型 值类型即基本的数据类型，包括布尔类型（bool）、整型（int）、浮点型（float）、字节型（byte）、复数型（complex）、字符串型（string）和错误类型（error）。 值类型的变量在传递过程中，编译器对该变量的值进行一次拷贝。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-26T13:40:23.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2022-05-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-26T13:40:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-03T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-26T13:40:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":3,"title":"值类型","slug":"值类型","link":"#值类型","children":[]},{"level":3,"title":"复合类型","slug":"复合类型","link":"#复合类型","children":[]},{"level":3,"title":"引用类型","slug":"引用类型","link":"#引用类型","children":[]}]}],"git":{"createdTime":1690708801000,"updatedTime":1708954823000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":2},{"name":"HeXiaoPi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":4.81,"words":1442},"filePathRelative":"go-language/base/data-type.md","localizedDate":"2022年5月3日","excerpt":"<h2> 数据类型</h2>\\n<blockquote>\\n<p>Go语言基本数据类型（Data-types）划分方式有很多，这里按照<strong>数据类型</strong>进行划分：值类型、复合类型、引用类型</p>\\n</blockquote>\\n<blockquote>\\n<p>左耳朵耗子说：类型的本质是对内存的一种抽象，不同的类型会有不同的内存布局和内存分配的策略。不同的类型有不同的操作。</p>\\n</blockquote>\\n<h3> 值类型</h3>\\n<blockquote>\\n<p>值类型即基本的数据类型，包括布尔类型（bool）、整型（int）、浮点型（float）、字节型（byte）、复数型（complex）、字符串型（string）和错误类型（error）。</p>\\n<p>值类型的变量在传递过程中，编译器对该变量的值进行一次拷贝。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
