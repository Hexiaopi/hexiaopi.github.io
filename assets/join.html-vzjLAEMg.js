import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as s,b as a,o as t}from"./app-BwICdpbX.js";const o="/assets/sql-join-GoddAjLg.webp",i="/assets/inner-join-BZR-cBSk.png",l="/assets/cross-join-xjGMQ5H6.png",c="/assets/outer-join-BFE7mS-c.png",r={},p=a('<blockquote><p>连接是一种机制，用来在一条SELECT语句中关联表</p></blockquote><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="内连接-inner-join" tabindex="-1"><a class="header-anchor" href="#内连接-inner-join"><span>内连接（INNER JOIN）</span></a></h2><blockquote><p>内连接又叫等值连接,它将第一个表中的每一行与第二个表中的每一行配对，只返回匹配给定条件的行 从数据的角度就是求两个集合的交集，如下图所示</p></blockquote><figure><img src="'+i+`" alt="内连接" tabindex="0" loading="lazy"><figcaption>内连接</figcaption></figure><p>示例：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> vend_name<span class="token punctuation">,</span>prod_name<span class="token punctuation">,</span>prod_price
<span class="token keyword">FROM</span> Vendors
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> Products <span class="token keyword">ON</span> Vendors<span class="token punctuation">.</span>vend_id <span class="token operator">=</span> Products<span class="token punctuation">.</span>vend_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自然连接-nature-join" tabindex="-1"><a class="header-anchor" href="#自然连接-nature-join"><span>自然连接（NATURE JOIN）</span></a></h2><blockquote><p>自然连接，会自动找出两个表中相同的列作为连接条件进行连接</p></blockquote><p>以下示例语句与内连接语句等价</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Customers<span class="token punctuation">.</span>cust_id<span class="token punctuation">,</span>Orders<span class="token punctuation">.</span>order_num
<span class="token keyword">FROM</span> Customers
<span class="token keyword">NATURAL</span> <span class="token keyword">JOIN</span> Orders
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>也可以省略<code>INNER</code>关键字，即<code>INNER JOIN</code>和<code>JOIN</code>等价</p></blockquote><h2 id="叉连接-cross-join" tabindex="-1"><a class="header-anchor" href="#叉连接-cross-join"><span>叉连接（CROSS JOIN）</span></a></h2><blockquote><p>即返回笛卡尔积的联 假设第一个表有6行数据，第二个表中有9行数据，那么通过叉连接就可以返回6*9=54条数据</p></blockquote><figure><img src="`+l+`" alt="叉连接" tabindex="0" loading="lazy"><figcaption>叉连接</figcaption></figure><p>示例：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> vend_name<span class="token punctuation">,</span>prod_name<span class="token punctuation">,</span>prod_price
<span class="token keyword">FROM</span> Vendors
<span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> Products
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="外连接-outer-join" tabindex="-1"><a class="header-anchor" href="#外连接-outer-join"><span>外连接（OUTER JOIN）</span></a></h2><p>可以通过内连接将一个表中的行与另一个表中的行相关联，但有时候需要包含没有关联行的那些行，这就需要外连接了。外连接分为：</p><ul><li>左外连接，内连接并保留左表没有匹配的行（若SELECT中包含右表的字段，则查询结果对应的记录为NULL）</li><li>右外连接，内连接并保留右表没有匹配的行（若SELECT中包含左表的字段，则查询结果对应的记录为NULL）</li></ul><figure><img src="`+c+`" alt="外连接" tabindex="0" loading="lazy"><figcaption>外连接</figcaption></figure><p>左外连接示例：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Customers<span class="token punctuation">.</span>cust_id<span class="token punctuation">,</span>Orders<span class="token punctuation">.</span>order_num
<span class="token keyword">FROM</span> Customers
<span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> Orders <span class="token keyword">ON</span> Customers<span class="token punctuation">.</span>cust_id <span class="token operator">=</span> Orders<span class="token punctuation">.</span>cust_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>OUTER</code>关键字可以省略，即<code>LEFT OUTER JOIN</code>和<code>LEFT JOIN</code>等价</p></blockquote><p>右外连接示例：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> Customers<span class="token punctuation">.</span>cust_id<span class="token punctuation">,</span>Orders<span class="token punctuation">.</span>order_num
<span class="token keyword">FROM</span> Customers
<span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> Orders <span class="token keyword">ON</span> Customers<span class="token punctuation">.</span>cust_id <span class="token operator">=</span> Orders<span class="token punctuation">.</span>cust_id
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>OUTER</code>关键字可以省略，即<code>RIGHT OUTER JOIN</code>和<code>RIGHT JOIN</code>等价</p></blockquote><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h2><p><a href="https://blog.bytebytego.com/p/ep90-how-do-sql-joins-work" target="_blank" rel="noopener noreferrer">bytebytego</a></p>`,29);function d(u,m){return t(),n("div",null,[s(" more "),p])}const h=e(r,[["render",d],["__file","join.html.vue"]]),b=JSON.parse('{"path":"/database/mysql/join.html","title":"表连接","lang":"zh-CN","frontmatter":{"title":"表连接","date":"2022-10-22T00:00:00.000Z","order":4,"tag":["MySQL"],"category":["数据存储"],"head":[["meta",{"property":"og:url","content":"http://blog.cjhe.top/database/mysql/join.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"表连接"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-23T10:17:10.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2022-10-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-23T10:17:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"表连接\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-23T10:17:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"内连接（INNER JOIN）","slug":"内连接-inner-join","link":"#内连接-inner-join","children":[]},{"level":2,"title":"自然连接（NATURE JOIN）","slug":"自然连接-nature-join","link":"#自然连接-nature-join","children":[]},{"level":2,"title":"叉连接（CROSS JOIN）","slug":"叉连接-cross-join","link":"#叉连接-cross-join","children":[]},{"level":2,"title":"外连接（OUTER JOIN）","slug":"外连接-outer-join","link":"#外连接-outer-join","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1648300560000,"updatedTime":1716459430000,"contributors":[{"name":"HeXiaoPi","email":"hechangjie0619@icloud.com","commits":4},{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":2}]},"readingTime":{"minutes":1.66,"words":499},"filePathRelative":"database/mysql/join.md","localizedDate":"2022年10月22日","excerpt":""}');export{h as comp,b as data};
