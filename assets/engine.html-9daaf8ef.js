import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,f as i,e as a}from"./app-47c4328b.js";const n="/assets/MySQL-Architecture-0a1ad920.png",r={},d=a('<blockquote><p>MySQL是常用的关系型数据库</p></blockquote><h2 id="mysql架构" tabindex="-1"><a class="header-anchor" href="#mysql架构" aria-hidden="true">#</a> MySQL架构</h2><figure><img src="'+n+'" alt="MySQL架构" tabindex="0" loading="lazy"><figcaption>MySQL架构</figcaption></figure><h2 id="存储引擎" tabindex="-1"><a class="header-anchor" href="#存储引擎" aria-hidden="true">#</a> 存储引擎</h2><ul><li>存储引擎是MySQL区别于其他数据库的一个重要特性，MySQL有诸多存储引擎，且<strong>存储引擎是基于表的，而不是数据</strong>(同一个数据库下面的各个表可以使用不同的引擎)</li><li>存储引擎是底层物理结构的实现，每个存储引擎开发者可以按照自己的意愿开发，具有各自的特点</li><li>对于MySQL使用者来说，存储引擎对其实透明的</li></ul><h3 id="innodb引擎" tabindex="-1"><a class="header-anchor" href="#innodb引擎" aria-hidden="true">#</a> Innodb引擎</h3><blockquote><p>是一个支持ACID事务，行锁设计，支持MVCC功能，实现了SQL标准的4种隔离级别</p></blockquote><h4 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h4><ul><li>使用Table Space的方式仅限数据存储</li><li>支持事务、外键约束等数据库特性</li><li>Rows Level Lock，读写性能都非常优秀</li><li>拥有独立的缓冲池，能够缓存数据和索引</li><li>通过多版本控制，支持高并发业务</li></ul><h4 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h4><ul><li>主键尽可能小，否则二级索引会膨胀</li><li>避免全表扫描，导致锁升级</li><li>尽可能缓存所有的索引和数据，减少IO操作</li><li>避免主键更新，造成大量的数据移动</li></ul><h3 id="myisam存储引擎" tabindex="-1"><a class="header-anchor" href="#myisam存储引擎" aria-hidden="true">#</a> MyISAM存储引擎</h3><blockquote><p>MySQL 5.5之前默认是MyISAM存储引擎，之后默认都改为InnoDB</p></blockquote><h4 id="特点-1" tabindex="-1"><a class="header-anchor" href="#特点-1" aria-hidden="true">#</a> 特点</h4><ul><li>数据存储方式简单，使用B-Tree进行索引，<strong>索引叶子节点存放数据的指针</strong></li><li><strong>不支持一些数据库特性，比如事务、外键约束等</strong></li><li><strong>Table Level Lock(表级别锁)</strong>，性能稍差，更适合读多的操作</li><li>使用三个文件定义一个表： <ul><li><code>.MYi</code>：存储索引</li><li><code>.MYD</code>：存储数据</li><li><code>.frm</code>：存储表定义</li></ul></li><li>少碎片、支持大文件、能够进行索引压缩</li><li>二进制层次的文件可以移植（Linux-&gt;Windows）</li><li>访问速度快，适合只读查询场景</li></ul><h4 id="注意事项-1" tabindex="-1"><a class="header-anchor" href="#注意事项-1" aria-hidden="true">#</a> 注意事项</h4><ul><li>设置合适索引</li><li>启用延迟写入，尽量一次大批量写入，而非频繁写入</li><li>降低并发数，高并发使用排队机制</li><li>由于存储了Count字段，因此Count操作比较高效，但仅限不带条件</li></ul><h2 id="引擎对比" tabindex="-1"><a class="header-anchor" href="#引擎对比" aria-hidden="true">#</a> 引擎对比</h2><table><thead><tr><th style="text-align:center;">存储引擎</th><th style="text-align:center;">特点</th><th style="text-align:center;">应用场景</th></tr></thead><tbody><tr><td style="text-align:center;">InnoDB</td><td style="text-align:center;">支持事务、行锁、支持MVCC多版本并发控制、并发性高</td><td style="text-align:center;">OLTP</td></tr><tr><td style="text-align:center;">MyISAM</td><td style="text-align:center;">不支持事务、表锁、并发低、资源利用低，但具有高性能和低存储空间消耗的特点</td><td style="text-align:center;">适用于大量只读数据的应用场景</td></tr><tr><td style="text-align:center;">Memory</td><td style="text-align:center;">数据存放在内存中、支持Hash和Btree索引、读取速度快</td><td style="text-align:center;">用于高并发、无需持久化的应用场景</td></tr><tr><td style="text-align:center;">Archive</td><td style="text-align:center;">高度压缩、zlib无损数据压缩，较MyISAM8倍，不支持更新、删除索引</td><td style="text-align:center;">适用于存储大量历史数据</td></tr><tr><td style="text-align:center;">Blackhole</td><td style="text-align:center;">不存储数据，同步时只写binlog</td><td style="text-align:center;">用于binlog转储</td></tr><tr><td style="text-align:center;">CSV</td><td style="text-align:center;">CSV格式，数据以文本文件形式存储</td><td style="text-align:center;">用于数据交换和数据迁移</td></tr><tr><td style="text-align:center;">NDB</td><td style="text-align:center;">MySQL的分布式存储引擎，支持分布式事务和高可用性，能够处理海量数据</td><td style="text-align:center;">集群存储</td></tr><tr><td style="text-align:center;"></td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr></tbody></table>',19);function c(s,o){return e(),l("div",null,[i(" more "),d])}const g=t(r,[["render",c],["__file","engine.html.vue"]]);export{g as default};
