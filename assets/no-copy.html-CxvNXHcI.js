import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as s,b as e,o as t}from"./app-SE2roejh.js";const o={},c=e(`<blockquote><p>禁止拷贝的目的是不让用户对对象进行拷贝，比如：sync.WaitGroup</p></blockquote><p>那么Go语言是如何禁止拷贝的呢？</p><h2 id="waitgroup为何禁止拷贝" tabindex="-1"><a class="header-anchor" href="#waitgroup为何禁止拷贝"><span>WaitGroup为何禁止拷贝</span></a></h2><p>还是以sync.WaitGroup为例，我们来看一下它的源码：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">type</span> WaitGroup <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    noCopy noCopy
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token comment">// noCopy may be added to structs which must not be copied</span>
<span class="token comment">// after the first use.</span>
<span class="token comment">//</span>
<span class="token comment">// See https://golang.org/issues/8005#issuecomment-190753527</span>
<span class="token comment">// for details.</span>
<span class="token comment">//</span>
<span class="token comment">// Note that it must not be embedded, due to the Lock and Unlock methods.</span>
<span class="token keyword">type</span> noCopy <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// Lock is a no-op used by -copylocks checker from \`go vet\`.</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>noCopy<span class="token punctuation">)</span> <span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>noCopy<span class="token punctuation">)</span> <span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到，<code>sync.WaitGroup</code>结构体中有一个<code>noCopy</code>的匿名结构体，并且实现了<code>Lock</code>和<code>Unlock</code>方法。通过内嵌了<code>noCopy</code>，sync.WaitGroup就禁止了拷贝。</p><p>其实原理很简单，就是通过<code>go vet</code>检查，如果发现结构体中包含<code>noCopy</code>，就会提示禁止拷贝。</p><h2 id="自己实现禁止拷贝" tabindex="-1"><a class="header-anchor" href="#自己实现禁止拷贝"><span>自己实现禁止拷贝</span></a></h2><p>那么我们定义自己的结构体，验证是否能够禁止拷贝</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> Demo <span class="token keyword">struct</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>Demo<span class="token punctuation">)</span> <span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>Demo<span class="token punctuation">)</span> <span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Copy</span><span class="token punctuation">(</span>d Demo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	d <span class="token operator">:=</span> Demo<span class="token punctuation">{</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%+v&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span>
	<span class="token function">Copy</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
	d2 <span class="token operator">:=</span> d
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%+v&quot;</span><span class="token punctuation">,</span> d2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>执行结果</summary><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ go run main.go
{}{}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details><p>运行结果依然是正常的，但是我们通过<code>go vet</code>检查一下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>$ go vet .\\main.go
# command-line-arguments
# [command-line-arguments]
.\\main.go:11:13: Copy passes lock by value: command-line-arguments.Demo
.\\main.go:16:20: call of fmt.Printf copies lock value: command-line-arguments.Demo
.\\main.go:17:7: call of Copy copies lock value: command-line-arguments.Demo
.\\main.go:18:8: assignment copies lock value to d2: command-line-arguments.Demo
.\\main.go:19:20: call of fmt.Printf copies lock value: command-line-arguments.Demo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们看到go vet提示了5个command-line-arguments.noCopy问题：</p><ul><li>第11行，定义Copy函数传参，本质是对象拷贝；</li><li>第16行，fmt.Printf函数调用，本质是对象拷贝；</li><li>第17行，Copy函数调用，本质是对象拷贝；</li><li>第18行，d赋值给d2，也是拷贝；</li><li>第19行，fmt.Printf函数调用，本质是参数拷贝。</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>要想禁止拷贝，可以定义一个结构体，只需实现<code>Lock</code>方法和<code>Unlock</code>方法，如下：</p><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">type</span> Demo <span class="token keyword">struct</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>Demo<span class="token punctuation">)</span> <span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>Demo<span class="token punctuation">)</span> <span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者类似<code>sync.WaitGroup</code>内嵌<code>noCopy</code>结构体。推荐使用该方式！</p><p>要想检测自己是否拷贝了禁止拷贝的结构体，可以使用<code>go vet</code>命令，该命令会检测出<code>noCopy</code>结构体的问题。</p>`,20);function p(i,l){return t(),a("div",null,[s(" more "),c])}const r=n(o,[["render",p],["__file","no-copy.html.vue"]]),m=JSON.parse('{"path":"/language/go/advance/no-copy.html","title":"Go如何禁止拷贝","lang":"zh-CN","frontmatter":{"title":"Go如何禁止拷贝","date":"2024-05-24T00:00:00.000Z","tag":["Go","进阶"],"category":["编程语言"],"head":[["meta",{"property":"og:url","content":"http://blog.cjhe.top/language/go/advance/no-copy.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"Go如何禁止拷贝"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-24T08:13:08.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"进阶"}],["meta",{"property":"article:published_time","content":"2024-05-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-24T08:13:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go如何禁止拷贝\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-24T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-24T08:13:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"WaitGroup为何禁止拷贝","slug":"waitgroup为何禁止拷贝","link":"#waitgroup为何禁止拷贝","children":[]},{"level":2,"title":"自己实现禁止拷贝","slug":"自己实现禁止拷贝","link":"#自己实现禁止拷贝","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1716537284000,"updatedTime":1716538388000,"contributors":[{"name":"HeXiaoPi","email":"hechangjie0619@icloud.com","commits":2}]},"readingTime":{"minutes":1.97,"words":590},"filePathRelative":"language/go/advance/no-copy.md","localizedDate":"2024年5月24日","excerpt":""}');export{r as comp,m as data};
