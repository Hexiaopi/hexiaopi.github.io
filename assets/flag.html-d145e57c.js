const n=JSON.parse('{"key":"v-1accc474","path":"/go-language/standard-library/flag.html","title":"flag使用","lang":"zh-CN","frontmatter":{"title":"flag使用","date":"2023-09-05T00:00:00.000Z","tag":["Go","标准库"],"category":["Go语言"],"description":"flag库实现命令行参数解析 简单用法 package main import ( \\t\\"flag\\" \\t\\"fmt\\" \\t\\"time\\" ) // Example1：flag.String 返回指针类型字符串 var flagStrA = flag.String(\\"str-a\\", \\"str-a\\", \\"flag test *string\\") // Example2：如果期望定义字符串类型，可以通过init函数初始化 var flagStrB string func init() { \\t// flag.StringVar可以绑定已有的变量 \\tflag.StringVar(&amp;flagStrB, \\"str-b\\", \\"str-b\\", \\"flag test string\\") } // Example3：int类型变量 var flagInt = flag.Int(\\"int\\", 1, \\"flag test *int\\") // Example4: bool类型变量，注意使用 var flagBool = flag.Bool(\\"bool\\", false, \\"flag test *bool\\") // Example5：duration类型变量 var flagDuration = flag.Duration(\\"duration\\", time.Minute*1, \\"flag test duration\\") func main() { \\tflag.Parse() \\tfmt.Println(*flagStrA) \\tfmt.Println(flagStrB) \\tfmt.Println(*flagInt) \\tfmt.Println(*flagBool) \\tfmt.Println(*flagDuration) }","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/go-language/standard-library/flag.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"flag使用"}],["meta",{"property":"og:description","content":"flag库实现命令行参数解析 简单用法 package main import ( \\t\\"flag\\" \\t\\"fmt\\" \\t\\"time\\" ) // Example1：flag.String 返回指针类型字符串 var flagStrA = flag.String(\\"str-a\\", \\"str-a\\", \\"flag test *string\\") // Example2：如果期望定义字符串类型，可以通过init函数初始化 var flagStrB string func init() { \\t// flag.StringVar可以绑定已有的变量 \\tflag.StringVar(&amp;flagStrB, \\"str-b\\", \\"str-b\\", \\"flag test string\\") } // Example3：int类型变量 var flagInt = flag.Int(\\"int\\", 1, \\"flag test *int\\") // Example4: bool类型变量，注意使用 var flagBool = flag.Bool(\\"bool\\", false, \\"flag test *bool\\") // Example5：duration类型变量 var flagDuration = flag.Duration(\\"duration\\", time.Minute*1, \\"flag test duration\\") func main() { \\tflag.Parse() \\tfmt.Println(*flagStrA) \\tfmt.Println(flagStrB) \\tfmt.Println(*flagInt) \\tfmt.Println(*flagBool) \\tfmt.Println(*flagDuration) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-07T12:24:15.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"标准库"}],["meta",{"property":"article:published_time","content":"2023-09-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-07T12:24:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"flag使用\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-07T12:24:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"简单用法","slug":"简单用法","link":"#简单用法","children":[{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}]}],"git":{"createdTime":1694089455000,"updatedTime":1694089455000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":1.08,"words":324},"filePathRelative":"go-language/standard-library/flag.md","localizedDate":"2023年9月5日","excerpt":"<blockquote>\\n<p>flag库实现命令行参数解析</p>\\n</blockquote>\\n<h2> 简单用法</h2>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n\\t<span class=\\"token string\\">\\"flag\\"</span>\\n\\t<span class=\\"token string\\">\\"fmt\\"</span>\\n\\t<span class=\\"token string\\">\\"time\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// Example1：flag.String 返回指针类型字符串</span>\\n<span class=\\"token keyword\\">var</span> flagStrA <span class=\\"token operator\\">=</span> flag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"str-a\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"str-a\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"flag test *string\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// Example2：如果期望定义字符串类型，可以通过init函数初始化</span>\\n<span class=\\"token keyword\\">var</span> flagStrB <span class=\\"token builtin\\">string</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">init</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">// flag.StringVar可以绑定已有的变量</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">StringVar</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">&amp;</span>flagStrB<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"str-b\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"str-b\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"flag test string\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// Example3：int类型变量</span>\\n<span class=\\"token keyword\\">var</span> flagInt <span class=\\"token operator\\">=</span> flag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Int</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"int\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"flag test *int\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// Example4: bool类型变量，注意使用</span>\\n<span class=\\"token keyword\\">var</span> flagBool <span class=\\"token operator\\">=</span> flag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Bool</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"bool\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"flag test *bool\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\">// Example5：duration类型变量</span>\\n<span class=\\"token keyword\\">var</span> flagDuration <span class=\\"token operator\\">=</span> flag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Duration</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"duration\\"</span><span class=\\"token punctuation\\">,</span> time<span class=\\"token punctuation\\">.</span>Minute<span class=\\"token operator\\">*</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"flag test duration\\"</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\tflag<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Parse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>flagStrA<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span>flagStrB<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>flagInt<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>flagBool<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">*</span>flagDuration<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
