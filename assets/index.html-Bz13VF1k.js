import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as i,c as r,f as l,d as s,a as t,b as e,e as p}from"./app-DLhRJE1G.js";const c="/assets/design-pattern-BXHqKg3V.png",g={},d=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"提示"),t("p",null,[e("面向对象是"),t("strong",null,"武器")]),t("p",null,[e("设计模式是"),t("strong",null,"招式")]),t("p",null,[e("设计原则是"),t("strong",null,"心法")]),t("p",null,"以心法为基础，以武器运用招式应对复杂的编程问题")],-1),h=p('<h2 id="什么是设计模式" tabindex="-1"><a class="header-anchor" href="#什么是设计模式"><span>什么是设计模式</span></a></h2><p>设计模式最早来源于建筑领域</p><blockquote><p>克里斯托弗.亚历山大在作品《建筑的永恒之道》中这样说：&quot;每个模式都描述了一个在我们的环境中不断出现的问题，然后描述了该问题的解决方案的核心，通过这种方式，我们可以无数次地重用那些已有的成功的解决方案，无须再重复相同的工作。&quot;</p></blockquote><p>之后四人组（Gang of Four，简称GoF）将模式的概念应用在软件开发设计中，定义如下：</p><blockquote><p>它是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。</p><p>它描述了在软件设计过程中的一些不断重复发生的问题，以及该问题的解决方案。</p></blockquote><p>简单来说，就是<strong>解决特定问题的一系列解决方案</strong>，是前辈们的代码设计经验的总结。</p><h2 id="有哪些优点" tabindex="-1"><a class="header-anchor" href="#有哪些优点"><span>有哪些优点</span></a></h2><ul><li><strong>提高代码复用性</strong>：设计模式的核心目标之一是提供可复用的解决方案。通过使用设计模式，可以将通用的解决方法应用于不同的情况，从而减少代码的冗余和重复编写。</li><li><strong>提高代码的可读性和可维护性</strong>：设计模式通过引入一定的结构和规范，使代码更有组织性和可读性。开发人员可以更轻松地理解和维护代码逻辑。</li><li><strong>降低代码耦合度</strong>：设计模式通过将系统分解为多个独立的部分，每个部分都有明确定义的职责和接口，从而降低了代码的耦合度。这使得系统更易于扩展、修改和维护。</li><li><strong>提高系统的可扩展性和灵活性</strong>：设计模式鼓励使用接口和抽象类进行编程，而不是具体的实现类。这种松耦合的设计使得系统更易于扩展，可以方便地引入新的功能和模块。</li><li><strong>提高系统的可测试性</strong>：设计模式将系统分解为多个独立的部分，每个部分都可以独立测试。这样可以更容易地编写和执行单元测试，提高代码的质量和可靠性。</li></ul><h2 id="有哪些要素" tabindex="-1"><a class="header-anchor" href="#有哪些要素"><span>有哪些要素</span></a></h2><ul><li><strong>问题</strong>：问题或称为上下文、场景，指在软件开发中需要解决的某个问题或需求。设计模式通常解决针对特定上下文或场景中出现的问题。</li><li><strong>解决方案</strong>：解决方案或称为模型、模式，是指用于解决上述问题的通用方法或最佳实践。设计模式描述了解决某问题的方法或模板，并提供了这些方法的实现细节，使得类似问题可以被解决且易于复用。</li><li><strong>效果</strong>：效果或称为结果、贡献，是指使用该模式带来的好处和优点。设计模式提供了可重用、灵活的解决方案，增加可维护性、可扩展性和可重用性。</li><li><strong>元素</strong>：元素或称为参与者、角色、类和对象，组成了设计模式的各个部分。这些元素可以是类、对象、接口、方法等等。元素描述了在特定上下文或场景中参与模式实现的各种组件。</li></ul><h2 id="具体分类" tabindex="-1"><a class="header-anchor" href="#具体分类"><span>具体分类</span></a></h2><figure><img src="'+c+'" alt="分类" tabindex="0" loading="lazy"><figcaption>分类</figcaption></figure>',12);function m(u,_){const n=a("Catalog");return i(),r("div",null,[d,l(" more "),h,s(n)])}const x=o(g,[["render",m],["__file","index.html.vue"]]),b=JSON.parse('{"path":"/design-pattern/","title":"设计模式","lang":"zh-CN","frontmatter":{"title":"设计模式","icon":"project-diagram","date":"2022-09-10T00:00:00.000Z","tag":["Go","设计模式"],"category":["设计模式"],"description":"提示 面向对象是武器 设计模式是招式 设计原则是心法 以心法为基础，以武器运用招式应对复杂的编程问题","head":[["meta",{"property":"og:url","content":"http://blog.cjhe.top/design-pattern/"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"设计模式"}],["meta",{"property":"og:description","content":"提示 面向对象是武器 设计模式是招式 设计原则是心法 以心法为基础，以武器运用招式应对复杂的编程问题"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-15T09:57:53.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:published_time","content":"2022-09-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-15T09:57:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"设计模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-15T09:57:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"什么是设计模式","slug":"什么是设计模式","link":"#什么是设计模式","children":[]},{"level":2,"title":"有哪些优点","slug":"有哪些优点","link":"#有哪些优点","children":[]},{"level":2,"title":"有哪些要素","slug":"有哪些要素","link":"#有哪些要素","children":[]},{"level":2,"title":"具体分类","slug":"具体分类","link":"#具体分类","children":[]}],"git":{"createdTime":1690708801000,"updatedTime":1713175073000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":5},{"name":"HeXiaoPi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":3.13,"words":938},"filePathRelative":"design-pattern/README.md","localizedDate":"2022年9月10日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>面向对象是<strong>武器</strong></p>\\n<p>设计模式是<strong>招式</strong></p>\\n<p>设计原则是<strong>心法</strong></p>\\n<p>以心法为基础，以武器运用招式应对复杂的编程问题</p>\\n</div>\\n","autoDesc":true}');export{x as comp,b as data};
