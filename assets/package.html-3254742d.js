const e=JSON.parse('{"key":"v-3024e0f4","path":"/go-language/base/package.html","title":"package","lang":"zh-CN","frontmatter":{"title":"package","date":"2023-08-27T00:00:00.000Z","tag":["Go","基础"],"category":["Go语言"],"description":"Go语言使用包（package）作为基本单元来组织源码。 package的优点 编译速度快 Go要求每个源文件在开头显示地列出所有依赖的包，如果引入了未使用的包，Go语言编译器会报错。 Go要求包之间不能存在循环依赖，这样包的依赖关系便形成了一张有向无环图，这样每个包可以单独编译也可并行编译 已编译的Go包不仅记录了该包的信息，还记录了依赖包的信息。只需读取缓存的编译产物即可。 初始化顺序 Go语言内置函数init()，常用于包级数据初始化以及初始状态的检查工作。","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/go-language/base/package.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"package"}],["meta",{"property":"og:description","content":"Go语言使用包（package）作为基本单元来组织源码。 package的优点 编译速度快 Go要求每个源文件在开头显示地列出所有依赖的包，如果引入了未使用的包，Go语言编译器会报错。 Go要求包之间不能存在循环依赖，这样包的依赖关系便形成了一张有向无环图，这样每个包可以单独编译也可并行编译 已编译的Go包不仅记录了该包的信息，还记录了依赖包的信息。只需读取缓存的编译产物即可。 初始化顺序 Go语言内置函数init()，常用于包级数据初始化以及初始状态的检查工作。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://Hexiaopi.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-27T02:48:23.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"package"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2023-08-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-27T02:48:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"package\\",\\"image\\":[\\"https://Hexiaopi.github.io/\\"],\\"datePublished\\":\\"2023-08-27T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-27T02:48:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"package的优点","slug":"package的优点","link":"#package的优点","children":[{"level":3,"title":"编译速度快","slug":"编译速度快","link":"#编译速度快","children":[]}]},{"level":2,"title":"初始化顺序","slug":"初始化顺序","link":"#初始化顺序","children":[]}],"git":{"createdTime":1693104503000,"updatedTime":1693104503000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":0.98,"words":295},"filePathRelative":"go-language/base/package.md","localizedDate":"2023年8月27日","excerpt":"<p>Go语言使用包（package）作为基本单元来组织源码。</p>\\n<h2> package的优点</h2>\\n<h3> 编译速度快</h3>\\n<ul>\\n<li>Go要求每个源文件在开头显示地列出所有依赖的包，如果引入了未使用的包，Go语言编译器会报错。</li>\\n<li>Go要求包之间不能存在循环依赖，这样包的依赖关系便形成了一张有向无环图，这样每个包可以单独编译也可并行编译</li>\\n<li>已编译的Go包不仅记录了该包的信息，还记录了依赖包的信息。只需读取缓存的编译产物即可。</li>\\n</ul>\\n<h2> 初始化顺序</h2>\\n<p>Go语言内置函数<code>init()</code>，常用于包级数据初始化以及初始状态的检查工作。</p>","autoDesc":true}');export{e as data};
