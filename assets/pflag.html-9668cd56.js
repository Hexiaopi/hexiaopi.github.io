const e=JSON.parse('{"key":"v-50289157","path":"/go-language/third-party/pflag.html","title":"pflag","lang":"zh-CN","frontmatter":{"title":"pflag","date":"2023-09-20T00:00:00.000Z","tag":["Go","三方库"],"category":["Go语言"],"description":"我在标准库中介绍了flag使用，对于小型的项目flag能够基本满足需求，但是在某些大型项目或者特殊场景下flag有些力不从心。主要在于： flag的子命令需要自己解析 flag的短命令需要定义两个变量 不支持一些参数废弃说明，这在更新的工具中对用户有更好的引导作用 因此业界开源的pflag受到广大爱好者的使用，在一些耳熟能详的开源项目里也都在使用pflag，例如：Kubernetes、Istio、Helm、Docker、Etcd等。","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/go-language/third-party/pflag.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"pflag"}],["meta",{"property":"og:description","content":"我在标准库中介绍了flag使用，对于小型的项目flag能够基本满足需求，但是在某些大型项目或者特殊场景下flag有些力不从心。主要在于： flag的子命令需要自己解析 flag的短命令需要定义两个变量 不支持一些参数废弃说明，这在更新的工具中对用户有更好的引导作用 因此业界开源的pflag受到广大爱好者的使用，在一些耳熟能详的开源项目里也都在使用pflag，例如：Kubernetes、Istio、Helm、Docker、Etcd等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-20T15:35:18.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"三方库"}],["meta",{"property":"article:published_time","content":"2023-09-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-20T15:35:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"pflag\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-20T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-20T15:35:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"简单用法","slug":"简单用法","link":"#简单用法","children":[{"level":3,"title":"支持标准库flag用法","slug":"支持标准库flag用法","link":"#支持标准库flag用法","children":[]},{"level":3,"title":"支持短选项","slug":"支持短选项","link":"#支持短选项","children":[]},{"level":3,"title":"支持绑定到已有变量","slug":"支持绑定到已有变量","link":"#支持绑定到已有变量","children":[]},{"level":3,"title":"标记命令行参数已废弃","slug":"标记命令行参数已废弃","link":"#标记命令行参数已废弃","children":[]},{"level":3,"title":"指定了参数却没有传值场景下的默认值改写","slug":"指定了参数却没有传值场景下的默认值改写","link":"#指定了参数却没有传值场景下的默认值改写","children":[]},{"level":3,"title":"支持隐藏参数","slug":"支持隐藏参数","link":"#支持隐藏参数","children":[]}]}],"git":{"createdTime":1695222538000,"updatedTime":1695224118000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":2}]},"readingTime":{"minutes":1.8,"words":541},"filePathRelative":"go-language/third-party/pflag.md","localizedDate":"2023年9月20日","excerpt":"<p>我在标准库中介绍了<a href=\\"/go-language/standard-library/flag.html\\" target=\\"blank\\">flag使用</a>，对于小型的项目flag能够基本满足需求，但是在某些大型项目或者特殊场景下flag有些力不从心。主要在于：</p>\\n<ul>\\n<li>flag的子命令需要自己解析</li>\\n<li>flag的短命令需要定义两个变量</li>\\n<li>不支持一些参数废弃说明，这在更新的工具中对用户有更好的引导作用</li>\\n</ul>\\n<p>因此业界开源的<a href=\\"https://github.com/spf13/pflag\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">pflag</a>受到广大爱好者的使用，在一些耳熟能详的开源项目里也都在使用pflag，例如：Kubernetes、Istio、Helm、Docker、Etcd等。</p>","autoDesc":true}');export{e as data};
