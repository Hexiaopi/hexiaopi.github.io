const t=JSON.parse('{"key":"v-29932942","path":"/design-pattern/function/","title":"函数模式","lang":"zh-CN","frontmatter":{"title":"函数模式","date":"2023-08-02T00:00:00.000Z","tag":["Go","函数模式"],"category":["设计模式"],"description":"函数模式 函数模式并非人们所熟知的面向对象的设计模式，但由于Go语言将函数作为一等公民： 函数可以作为参数 函数可以作为变量 函数可以作为返回值 因此，在Go语言中，通过函数模式，可以实现一些函数式编程的特性，如高阶函数、闭包等。 选项模式 中间件模式","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/design-pattern/function/"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"函数模式"}],["meta",{"property":"og:description","content":"函数模式 函数模式并非人们所熟知的面向对象的设计模式，但由于Go语言将函数作为一等公民： 函数可以作为参数 函数可以作为变量 函数可以作为返回值 因此，在Go语言中，通过函数模式，可以实现一些函数式编程的特性，如高阶函数、闭包等。 选项模式 中间件模式"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-03T14:52:58.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"函数模式"}],["meta",{"property":"article:published_time","content":"2023-08-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-03T14:52:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"函数模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-02T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-03T14:52:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"函数模式","slug":"函数模式","link":"#函数模式","children":[]}],"git":{"createdTime":1690815158000,"updatedTime":1691074378000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":2}]},"readingTime":{"minutes":0.43,"words":129},"filePathRelative":"design-pattern/function/README.md","localizedDate":"2023年8月2日","excerpt":"<h2> 函数模式</h2>\\n<p>函数模式并非人们所熟知的面向对象的设计模式，但由于Go语言将函数作为<strong>一等公民</strong>：</p>\\n<ul>\\n<li>函数可以作为参数</li>\\n<li>函数可以作为变量</li>\\n<li>函数可以作为返回值</li>\\n</ul>\\n<p>因此，在Go语言中，通过函数模式，可以实现一些函数式编程的特性，如高阶函数、闭包等。</p>\\n<ul class=\\"task-list-container\\">\\n<li class=\\"task-list-item\\"><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" id=\\"task-item-0\\" disabled=\\"disabled\\"><label class=\\"task-list-item-label\\" for=\\"task-item-0\\"> 选项模式</label></li>\\n<li class=\\"task-list-item\\"><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" id=\\"task-item-1\\" disabled=\\"disabled\\"><label class=\\"task-list-item-label\\" for=\\"task-item-1\\"> 中间件模式</label></li>\\n</ul>","autoDesc":true}');export{t as data};
