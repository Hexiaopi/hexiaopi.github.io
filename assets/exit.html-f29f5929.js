const n=JSON.parse('{"key":"v-380c9c6a","path":"/design-pattern/concurrency/exit.html","title":"退出模式","lang":"zh-CN","frontmatter":{"title":"退出模式","date":"2023-08-22T00:00:00.000Z","tag":["Go","并发模式"],"category":["设计模式"],"description":"退出模式 使用关键字go很容易启动goroutine，这样创建的协程和当前协程已经分离，我们并不知道 等待指定协程退出 package main import ( \\t\\"fmt\\" \\t\\"time\\" ) type signal struct{} func worker() { \\tprintln(\\"worker is working...\\") \\ttime.Sleep(1 * time.Second) } func spawn(f func()) &lt;-chan signal { \\tc := make(chan signal) \\tgo func() { \\t\\tprintln(\\"worker start to work...\\") \\t\\tf() \\t\\tc &lt;- signal(struct{}{}) \\t}() \\treturn c } func main() { \\tprintln(\\"start a worker...\\") \\tc := spawn(worker) \\t&lt;-c \\tfmt.Println(\\"worker work done!\\") } &nbsp;","head":[["meta",{"property":"og:url","content":"https://Hexiaopi.github.io/design-pattern/concurrency/exit.html"}],["meta",{"property":"og:site_name","content":"Hexiaopi"}],["meta",{"property":"og:title","content":"退出模式"}],["meta",{"property":"og:description","content":"退出模式 使用关键字go很容易启动goroutine，这样创建的协程和当前协程已经分离，我们并不知道 等待指定协程退出 package main import ( \\t\\"fmt\\" \\t\\"time\\" ) type signal struct{} func worker() { \\tprintln(\\"worker is working...\\") \\ttime.Sleep(1 * time.Second) } func spawn(f func()) &lt;-chan signal { \\tc := make(chan signal) \\tgo func() { \\t\\tprintln(\\"worker start to work...\\") \\t\\tf() \\t\\tc &lt;- signal(struct{}{}) \\t}() \\treturn c } func main() { \\tprintln(\\"start a worker...\\") \\tc := spawn(worker) \\t&lt;-c \\tfmt.Println(\\"worker work done!\\") } &nbsp;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-22T14:05:24.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"并发模式"}],["meta",{"property":"article:published_time","content":"2023-08-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-22T14:05:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"退出模式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-22T14:05:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"退出模式","slug":"退出模式","link":"#退出模式","children":[{"level":3,"title":"等待指定协程退出","slug":"等待指定协程退出","link":"#等待指定协程退出","children":[]},{"level":3,"title":"等待多个协程退出","slug":"等待多个协程退出","link":"#等待多个协程退出","children":[]}]}],"git":{"createdTime":1692713124000,"updatedTime":1692713124000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":1}]},"readingTime":{"minutes":1.03,"words":309},"filePathRelative":"design-pattern/concurrency/exit.md","localizedDate":"2023年8月22日","excerpt":"<h2> 退出模式</h2>\\n<p>使用关键字<code>go</code>很容易启动goroutine，这样创建的协程和当前协程已经分离，我们并不知道</p>\\n<h3> 等待指定协程退出</h3>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre go=\\"\\" class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">(</span>\\n\\t<span class=\\"token string\\">\\"fmt\\"</span>\\n\\t<span class=\\"token string\\">\\"time\\"</span>\\n<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">type</span> signal <span class=\\"token keyword\\">struct</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">worker</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"worker is working...\\"</span><span class=\\"token punctuation\\">)</span>\\n\\ttime<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Sleep</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span> <span class=\\"token operator\\">*</span> time<span class=\\"token punctuation\\">.</span>Second<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">spawn</span><span class=\\"token punctuation\\">(</span>f <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&lt;-</span><span class=\\"token keyword\\">chan</span> signal <span class=\\"token punctuation\\">{</span>\\n\\tc <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">make</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">chan</span> signal<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">go</span> <span class=\\"token keyword\\">func</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"worker start to work...\\"</span><span class=\\"token punctuation\\">)</span>\\n\\t\\t<span class=\\"token function\\">f</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t\\tc <span class=\\"token operator\\">&lt;-</span> <span class=\\"token function\\">signal</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">struct</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token keyword\\">return</span> c\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"start a worker...\\"</span><span class=\\"token punctuation\\">)</span>\\n\\tc <span class=\\"token operator\\">:=</span> <span class=\\"token function\\">spawn</span><span class=\\"token punctuation\\">(</span>worker<span class=\\"token punctuation\\">)</span>\\n\\t<span class=\\"token operator\\">&lt;-</span>c\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"worker work done!\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"highlight-lines\\"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class=\\"highlight-line\\">&nbsp;</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
