import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e as t}from"./app-5nld10jx.js";const e={},p=t(`<h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h2><blockquote><p>一个由固定长度的特定类型组成的序列。特定类型可以是：字符串、结构体、函数、接口、通道等。</p></blockquote><h3 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">var</span> a <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span>								<span class="token comment">//长度为3的int类型数组，元素为[0,0,0]</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span>			<span class="token comment">//长度为3的int类型数组，元素为[1,2,3]</span>
<span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">}</span>		<span class="token comment">//长度为3的int类型数组，元素为[0,2,3]</span>
<span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span>	<span class="token comment">//长度为4的int类型数组，元素为[0,2,3,4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>第一种定义：直接初始化长度</li><li>第二种定义：直接初始化数组元素，其中<code>...</code>Go语言编译器根据初始化自动推算长度，例如数组b的长度是3</li><li>第三种定义：根据索引初始化数组元素，其中未使用索引直接初始化的元素的值对应的是<strong>零值</strong>，例如c[0]</li><li>第四种定义：混合使用第二种定义和第三种定义。</li></ul></div><h3 id="遍历" tabindex="-1"><a class="header-anchor" href="#遍历"><span>遍历</span></a></h3><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">for</span> i<span class="token operator">:=</span><span class="token keyword">range</span> a<span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a[%d]: %d\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">for</span> i<span class="token punctuation">,</span>v<span class="token operator">:=</span><span class="token keyword">range</span> a<span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a[%d]: %d\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">for</span> i<span class="token operator">:=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">{</span>
  fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a[%d]: %d\\n&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li><code>for range</code>方式迭代可以保证不会出现数组越界的情况。</li><li>数组的定义包含长度，因此长度不同的数组，即便类型一致，整个数组仍不是同一类型。</li><li>长度为0的数组并不占用内存</li></ul></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Go语言中数组是值类型，因此在函数传参中，如果数组比较大，建议传递指针数组，避免数据拷贝开销</p></div>`,11),o=[p];function c(l,i){return a(),s("div",null,o)}const k=n(e,[["render",c],["__file","array.html.vue"]]),d=JSON.parse('{"path":"/go-language/base/array.html","title":"数组","lang":"zh-CN","frontmatter":{"title":"数组","date":"2022-05-05T00:00:00.000Z","tag":["Go","基础"],"category":["Go语言"],"description":"数组 一个由固定长度的特定类型组成的序列。特定类型可以是：字符串、结构体、函数、接口、通道等。 声明 提示 第一种定义：直接初始化长度 第二种定义：直接初始化数组元素，其中...Go语言编译器根据初始化自动推算长度，例如数组b的长度是3 第三种定义：根据索引初始化数组元素，其中未使用索引直接初始化的元素的值对应的是零值，例如c[0] 第四种定义：混合使...","head":[["meta",{"property":"og:url","content":"http://blog.cjhe.top/go-language/base/array.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"数组"}],["meta",{"property":"og:description","content":"数组 一个由固定长度的特定类型组成的序列。特定类型可以是：字符串、结构体、函数、接口、通道等。 声明 提示 第一种定义：直接初始化长度 第二种定义：直接初始化数组元素，其中...Go语言编译器根据初始化自动推算长度，例如数组b的长度是3 第三种定义：根据索引初始化数组元素，其中未使用索引直接初始化的元素的值对应的是零值，例如c[0] 第四种定义：混合使..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-13T15:30:36.000Z"}],["meta",{"property":"article:author","content":"Hexiaopi"}],["meta",{"property":"article:tag","content":"Go"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:published_time","content":"2022-05-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-13T15:30:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-13T15:30:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Hexiaopi\\",\\"url\\":\\"https://github.com/Hexiaopi\\"}]}"]]},"headers":[{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[{"level":3,"title":"声明","slug":"声明","link":"#声明","children":[]},{"level":3,"title":"遍历","slug":"遍历","link":"#遍历","children":[]}]}],"git":{"createdTime":1651757625000,"updatedTime":1691940636000,"contributors":[{"name":"hexiaopi","email":"hechangjie0619@icloud.com","commits":2}]},"readingTime":{"minutes":1.43,"words":430},"filePathRelative":"go-language/base/array.md","localizedDate":"2022年5月5日","excerpt":"<h2>数组</h2>\\n<blockquote>\\n<p>一个由固定长度的特定类型组成的序列。特定类型可以是：字符串、结构体、函数、接口、通道等。</p>\\n</blockquote>\\n<h3>声明</h3>\\n<div class=\\"language-go\\" data-ext=\\"go\\" data-title=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">var</span> a <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span>\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"token comment\\">//长度为3的int类型数组，元素为[0,0,0]</span>\\n<span class=\\"token keyword\\">var</span> b <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">}</span>\\t\\t\\t<span class=\\"token comment\\">//长度为3的int类型数组，元素为[1,2,3]</span>\\n<span class=\\"token keyword\\">var</span> c <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">}</span>\\t\\t<span class=\\"token comment\\">//长度为3的int类型数组，元素为[0,2,3]</span>\\n<span class=\\"token keyword\\">var</span> d <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">:</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">}</span>\\t<span class=\\"token comment\\">//长度为4的int类型数组，元素为[0,2,3,4]</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
