import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,e as s}from"./app-cf5e0735.js";const i={},a=s('<h2 id="函数模式" tabindex="-1"><a class="header-anchor" href="#函数模式" aria-hidden="true">#</a> 函数模式</h2><p>函数模式并非人们所熟知的面向对象的设计模式，但由于Go语言将函数作为<strong>一等公民</strong>：</p><ul><li>函数可以作为参数</li><li>函数可以作为变量</li><li>函数可以作为返回值</li></ul><p>因此，在Go语言中，通过函数模式，可以实现一些函数式编程的特性，如高阶函数、闭包等。</p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 选项模式</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 中间件模式</label></li></ul>',5),c=[a];function o(d,n){return e(),l("div",null,c)}const k=t(i,[["render",o],["__file","index.html.vue"]]);export{k as default};
